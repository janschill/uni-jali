type Attribute = Att Tuple;
type Node = Text String | Tag String [Attribute] [Node];
type Message = Increment | Decrement;
type Action = OnClick;

init = 0;

func update msg model =
  match msg with
  | Increment -> model + 1
  | Decrement -> model - 1
end

func onClick msg =
  update (msg) (init)
end

func view model =
  Tag ("div") ([("class", "div"), ("id", "myid")]) ([
    Text ("Hello World"),
    Tag ("div") ([("class", "div__inner")]) ([
      Tag ("button") ([("class", "increment"), ("onClick", (onClick Increment))]) ([Text ("Increment")]),
      Tag ("p") ([("class", "model")]) ([Text (model)]),
      Tag ("button") ([("class", "decrement"), ("onClick", (onClick Decrement))]) ([Text ("Decrement")]),
    ])
  ])
end

func attributesToString attributes =
  match attributes with
  | [] -> ""
  | x::xs ->
    match x with
    | (k, v) -> " " + k + "=" + v + (attributesToString xs)
end

func tagToString t =
  match t with
  | [] -> ""
  | x::xs ->
    match x with
    | Text (text) -> text + (tagToString xs)
    | Tag (elementName) (attributes) (children) -> "<" + elementName + attributesToString (attributes) + ">" + (tagToString children) + "</" + elementName + ">" + (tagToString xs)
    | _ -> ""
  | _ -> ""
end

func html tags =
  "<!DOCTYPE html>" +
  "<html lang=\"en\">" +
  "<head>" +
  "    <meta charset=\"UTF-8\">" +
  "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">" +
  "    <title>Hello World</title>" +
  "  </head>" +
  "<body>" +
     tags +
  "</body>" +
  "</html>"
end

html (tagToString ([view(0)]))
(*
func main init view update =

end

main (0) (view) (update)
*)
