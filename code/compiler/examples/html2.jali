type Attribute = Att Tuple;
type Node = Text String | Tag String [Attribute] [Node];

type Message = Increment | Decrement;

func tag name attributes nodes =
  Tag (name) (attributes) (nodes)
end

func text value =
  Text (value)
end

func button attributes textValue =
  Tag ("button") (attributes) (text (textValue))
end

func div attributes nodes =
  Tag ("div") (attributes) (nodes)
end

func update msg model =
  match msg with
    | Increment -> model + 1
    | Decrement -> model - 1
end

func view model =
  Tag ("div") ([]) ([
    Text (model),
    Text ("Hello World")
  ])
end

func view2 model =
    view (update (Increment) model)
end

type Diff = Change Node | Path Integer Diff

func fold ns1 ns2 =
  match (ns1, ns2) with
  | (h1::t1, h2::t2) -> // what index is the change at?
end

func diff view1 view2 =
  match (view1, view2) with
  | (Tag(t1, atts1, ns1), Tag(t2, atts2, ns2)) -> if t1 == t2 then diff ()
end

view2
